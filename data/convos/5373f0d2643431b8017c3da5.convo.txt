idRef {
  id: "5373f0d2643431b8017c3da5"
}
ui_name: "a3-dam-guard"
nodes {
  idRef {
    id: "5373f0d8643431b8017c3dab"
  }
  index: 0
  text: "$+(l.sir)! I\'m pleased to see you here! But, please, keep your distance.\n\nI just arrived on the scene, and saw that those Native Californians have wired up the dam with IEDs. There\'s a bunch of tripwires right ahead, and a lot more explosives past it.\n\nThere\'s no way around, though, and it sounds like they\'re up to something ugly on the far end."
  branches {
    responseText: ""
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "bombDefuseState"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "5373f150643431b8017c3dae"
  }
  index: 1
  text: ""
  branches {
    responseText: "Can you disarm the tripwires?"
    nextNodeIndex: 2
    onlyOnce: true
    idRef {
      id: "5373f180643431b8017c3dc1"
    }
  }
  branches {
    responseText: "{{CC}}Intelligence: 6{{/CC}} I think I can see how to disable it...{{/CC}}"
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 6
        }
      }
    }
    nextNodeIndex: 3
  }
  branches {
    responseText: "{{CC}}Etiquette: Security{{/CC}} You are a soldier, and it\'s your responsibility to save lives! Now get out there and take care of this!"
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 14
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Charisma: 6{{/CC}} Come on, this is a once-in-a-lifetime opportunity to be a hero! Get out there and take care of those bombs! Who wants to live forever, eh?"
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 6
        }
      }
    }
    nextNodeIndex: 5
  }
  branches {
    responseText: "Do I have any volunteers on my team?"
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 1
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "5366874d3662362409008236"
            }
          }
        }
      }
    }
    nextNodeIndex: 8
    hideIfUnavailable: true
  }
  branches {
    responseText: "Looks like I\'ll need to risk it."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5373f15f643431b8017c3db6"
  }
  index: 2
  text: "I\'m sorry, $(l.sir), but I cannot. And we don\'t have enough time to call in a demolitions expert."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5373f1bc643431b8017c3dc3"
  }
  index: 3
  text: "{{GM}}You provide careful instructions to the guard, who even more carefully snips his way through the nest of wires.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 4
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5373f213643431b8017c3dc6"
  }
  index: 4
  text: "Phew... that was amazing, $(l.sir)! All right, I\'m going to hang back here and make sure nobody tries to cross over into Redding. Good luck!"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "isFirstBombDefused"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "bombDefuseState"
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
}
nodes {
  idRef {
    id: "5373f370643431b8017c3df5"
  }
  index: 5
  text: "Um... are you sure? I have absolutely no formal training in dealing with explosives of any kind."
  branches {
    responseText: "Yes, I\'m sure."
    nextNodeIndex: 6
  }
  branches {
    responseText: "On second thought, better not."
    nextNodeIndex: 7
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5373f370643431b8017c3df8"
  }
  index: 6
  text: "Well... all right...\n\nIf I don\'t make it back, please tell my wife that I miss her."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "isGuardDefusing"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5373f370643431b8017c3dfb"
  }
  index: 7
  text: "Phew!"
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5373f3c6643431b8017c3e25"
  }
  index: 8
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 8
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 1
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Tag From String"
            args {
              string_value: "isBummer"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 1
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Tag From String"
            args {
              string_value: "isLazarus"
            }
          }
        }
      }
    }
    nextNodeIndex: 9
  }
  branches {
    responseText: ""
    nextNodeIndex: 14
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5373f43f643431b8017c3e5a"
  }
  index: 9
  text: "Would you like me to handle it?"
  branches {
    responseText: "Yes, please."
    actions {
      ops {
        functionName: "Trigger: Run Alternate Trigger"
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "5373f5da643431e90d13c399"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WaitOrNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "No, better not."
    nextNodeIndex: 10
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5373f4cf643431a10d13c39a"
  }
}
nodes {
  idRef {
    id: "5373f730643431e90d13c3c1"
  }
  index: 10
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 8
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 2
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Tag From String"
            args {
              string_value: "isBummer"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 2
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Tag From String"
            args {
              string_value: "isLazarus"
            }
          }
        }
      }
    }
    nextNodeIndex: 11
  }
  branches {
    responseText: ""
    nextNodeIndex: 14
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5373f765643431e90d13c3f1"
  }
  index: 11
  text: "Should I check it out?"
  branches {
    responseText: "Go ahead."
    actions {
      ops {
        functionName: "Trigger: Run Alternate Trigger"
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "537d76f43662361815001d31"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WaitOrNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "No, I can\'t risk it."
    nextNodeIndex: 12
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5373f4d2643431a10d13c39b"
  }
}
nodes {
  idRef {
    id: "5373f7c6643431e90d13c420"
  }
  index: 12
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 8
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 3
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Tag From String"
            args {
              string_value: "isBummer"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 3
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Tag From String"
            args {
              string_value: "isLazarus"
            }
          }
        }
      }
    }
    nextNodeIndex: 13
  }
  branches {
    responseText: ""
    nextNodeIndex: 14
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5373f7e9643431e90d13c424"
  }
  index: 13
  text: "Does this mean I should do it?"
  branches {
    responseText: "Absolutely."
    actions {
      ops {
        functionName: "Trigger: Run Alternate Trigger"
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "537d76f53662361815001d32"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WaitOrNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Absolutely not."
    nextNodeIndex: 14
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5373f3d7643431b8017c3e2e"
  }
  index: 14
  text: "{{GM}}No luck. The tripwires still remain.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5373f898643431e90d13c494"
  }
  index: 15
  text: "I don\'t want to alarm you, but you\'d better get moving soon."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5373f8b5643431e90d13c4d7"
  }
  index: 16
  text: "It looks like the rest of the bombs on the dam are set for manual detonation. You should be safe, at least until you get across. Good luck!"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nothing Selected"
        }
      }
    }
  }
}
roots {
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "bombDefuseState"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "bombDefuseState"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  nextNodeIndex: 15
}
roots {
  responseText: ""
  nextNodeIndex: 16
}
