idRef {
  id: "51fe9a2d3662365008005f93"
}
ui_name: "A1_Club_DoorGuard"
nodes {
  idRef {
    id: "51fe9a583662365008005f99"
  }
  index: 0
  text: "Pardon me, $(l.sir), but this area is restricted to Antumbra personnel only."
  branches {
    responseText: "What exactly is back there?"
    nextNodeIndex: 1
    onlyOnce: true
    idRef {
      id: "51fe9a6f3662365008005f9e"
    }
  }
  branches {
    responseText: "I need to get inside."
    nextNodeIndex: 2
    onlyOnce: true
    idRef {
      id: "51fe9aa33662365008005fa4"
    }
  }
  branches {
    responseText: "{{CC}}Etiquette: Security{{/CC}} I just heard a report come in over the scanner. DMS-371 has been called in on the entire building. I need to alert Kali that her talent is at risk."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 14
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 3
    onlyOnce: true
    idRef {
      id: "51fe9b693662365008005fb3"
    }
  }
  branches {
    responseText: "I have an appointment with Kali."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51f7429764343188990041a8"
            }
            args {
              string_value: "A1_Bool_FakeMusician"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
  }
  branches {
    responseText: "I have an appointment with Kali."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51f7429764343188990041a8"
            }
            args {
              string_value: "A1_Bool_FakeMusician"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51f7429764343188990041a8"
            }
            args {
              string_value: "A1_Bool_FakePopularMusician"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
  }
  branches {
    responseText: "I have an appointment with Kali."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51f7429764343188990041a8"
            }
            args {
              string_value: "A1_Bool_FakePopularMusician"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 11
    hideIfUnavailable: true
  }
  branches {
    responseText: "I need to get backstage."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Maintenance"
            }
          }
        }
      }
    }
    nextNodeIndex: 14
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}Sucker-punch the guard.{{/GM}}"
    actions {
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "51fd3b4c3662367c090072c0"
            }
          }
        }
      }
      ops {
        functionName: "Apply Camera Shake"
        args {
          float_value: 0.5
        }
        args {
          float_value: 0.25
        }
      }
      ops {
        functionName: "Cause Damage"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Target Actor"
              }
            }
            args {
            }
          }
        }
        args {
          int_value: 3
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HPOrAP"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Set Alarm State"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Team Alliance"
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TeamAlliance"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Set Team Alliance"
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TeamAlliance"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Order Actor to Move To (Region)"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "bystander"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "51fea2c93662365008006012"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Activate Actor Spawner"
        args {
          call_value {
            functionName: "Get Map Item (Actor Reference)"
            args {
              string_value: "51fea39d3662365008006014"
            }
          }
        }
      }
      ops {
        functionName: "Order Actor to Move To (Region)"
        args {
          call_value {
            functionName: "All Actors on Team"
            args {
              call_value {
                functionName: "Get Preset Value (string)"
                args {
                  string_value: "FactionList"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (SceneDimension)"
                args {
                  string_value: "Default"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "51fea2c93662365008006012"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Play Music"
        args {
          call_value {
            functionName: "Get Map Item (Music)"
            args {
              string_value: "Seattle_Set9"
            }
            args {
              string_value: "Seattle-Set9-Combat"
            }
          }
        }
        args {
          float_value: 1
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Order Actor to Seek And Destroy (Team)"
        args {
          call_value {
            functionName: "All Actors on Team"
            args {
              call_value {
                functionName: "Get Preset Value (string)"
                args {
                  string_value: "FactionList"
                }
                args {
                  int_value: 2
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (SceneDimension)"
                args {
                  string_value: "Default"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
    }
    nextNodeIndex: 16
  }
  branches {
    responseText: "Keep up the good work."
    nextNodeIndex: 17
  }
  branches {
    responseText: "{{GM}}Move along.{{/GM}}"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51fe9a713662365008005fa0"
  }
  index: 1
  text: "Ha! You\342\200\231re probably picturing a glamorous non-stop party, with Kali and all of her tri-vid friends dancing and drinking and fragging. I assure you, it\342\200\231s as boring as any office: desks and terminals and regular patrols by highly-armed security like myself."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51fe9a953662365008005fa3"
  }
  index: 2
  text: "I very much doubt that. I don\342\200\231t know why you would even WANT to get inside, but in any case, I only have one job: stopping $(l.race_plural) like you from entering."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51fe9ade3662365008005fa7"
  }
  index: 3
  text: "Yeah? That sounds bad. Fortunately, we should be able to evacuate the folks down here quickly. I think the only people left upstairs right now are guards and the woman herself. Uh... how do you think we should report this threat?"
  branches {
    responseText: "You should confirm it before doing anything. Could have just been some joker."
    nextNodeIndex: 4
  }
  branches {
    responseText: "Contact your superior immediately!"
    nextNodeIndex: 5
  }
  branches {
    responseText: "{{CC}}Etiquette: Socialite{{/CC}} I know Kali from Evergreen. I\342\200\231ll break the news to her gently. We don\342\200\231t want her shooting the messenger."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 16
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 6
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51fe9b023662365008005fac"
  }
  index: 4
  text: "Good idea. I\342\200\231ll phone it in. \n\n{{GM}}To your disappointment, he remains at his post and picks up his comm.{{/GM}}\n"
  branches {
    responseText: ""
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51fe9b273662365008005faf"
  }
  index: 5
  text: "You\342\200\231re right. We need to put the office on high alert immediately. Better to not panic the partiers, though. \n\n{{GM}}To your disappointment, he remains at his post and picks up his comm.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51fe9b673662365008005fb2"
  }
  index: 6
  text: "{{GM}}A shudder runs through the guard. He appears familiar with Kali\342\200\231s capricious moods.{{/GM}} \n\nQuite literally in some cases. Thanks, $(l.man). Here\342\200\231s a pass to get in. \n\n{{GM}}After he hands you the keycard, the guard opens a comm channel to his superior. Your ruse probably won\342\200\231t last much longer.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51fd3b4c3662367c090072c0"
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Office Keycard"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51fe9c033662365008005fb6"
  }
  index: 7
  text: "Unlikely, but not impossible. Let\342\200\231s get a look at you. \n\n{{GM}}The guard scans your face, then pulls up a screen on his terminal.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 8
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51fe9f433662365008005fcc"
  }
  index: 8
  text: "Sorry, $(l.man), but Kali doesn\342\200\231t know you from Dunkelzahn."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51fe9f953662365008005fd2"
  }
  index: 9
  text: "Unlikely, but not impossible. Let\342\200\231s get a look at you. \n\n{{GM}}The guard scans your face, then pulls up a screen on his terminal.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 10
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51fe9fc03662365008005fd5"
  }
  index: 10
  text: "Ah, a pleasure to meet you, $(l.name).\n\nUnfortunately, I\342\200\231m pretty sure that Kali won\342\200\231t be needing your services. I hope you understand. She\342\200\231s a very busy lady, and only has time for people with the most potential."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51fe9fe33662365008005fd7"
  }
  index: 11
  text: "Unlikely, but not impossible. Let\342\200\231s get a look at you. \n\n{{GM}}The guard scans your face, then pulls up a screen on his terminal.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 12
  }
}
nodes {
  idRef {
    id: "51fe9fea3662365008005fda"
  }
  index: 12
  text: "Yes, I can see why Kali would be interested. You\342\200\231re probably going to be a big star in a few weeks! Hey, can I get your autograph?"
  branches {
    responseText: "{{GM}}Scrawl your signature across the guard\342\200\231s bicep.{{/GM}}"
    nextNodeIndex: 13
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51fea03b3662365008005fe0"
  }
  index: 13
  text: "Wow, thanks! My wife will be so jealous. Here\342\200\231s your key card. Head right on in, Kali will be waiting for you. Oh, and a word of warning: the guards upstairs work off of a separate visitor list. Shouldn\342\200\231t be a problem, though... unless you hacked into our system! Ha!"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Office Keycard"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51fd3b4c3662367c090072c0"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51fea1103662365008005fe4"
  }
  index: 14
  text: "Yeah? Where\342\200\231s your work order?"
  branches {
    responseText: "I... I\342\200\231ll get back to you on that."
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{CC}}Work Order{{/CC}} {{GM}}Hand him the order.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Work Order"
            }
          }
        }
      }
    }
    nextNodeIndex: 15
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51fea1483662365008005fe8"
  }
  index: 15
  text: "{{GM}}The guard carefully scrutinizes your papers.{{/GM}}\n\nHm... this all seems in order. Go ahead. But don\342\200\231t go wandering upstairs! The guards up there are real shoot-first, scrape-the-body-off-the-floor-later types. "
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Office Keycard"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51fd3b4c3662367c090072c0"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5207fabe3662364c0d003d4c"
  }
  index: 16
  text: "{{GM}}The guard yells out in anger and cocks his gun. Screams of panic fill the air as the patrons rush for the exit, fleeing the oncoming carnage.{{/GM}}"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "bystander"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
    }
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            string_value: "BystanderProp"
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "BystanderVanish"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51fea5d03662365008006094"
  }
  index: 17
  text: "{{GM}}He nods gravely, and returns to scanning the dance floor.{{/GM}}"
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  nextNodeIndex: 0
}
